on:
  push:
    branches:
      - 'develop'

jobs:
  test_deploy:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: asdaaskdw9u2r4lfkjd32
      DEBUG: True
      ALLOWED_HOSTS: '*'
      DB_URL: sqlite:///db.sqlite3
      BASE_URL: /
      EMAIL_HOST: localhost
      EMAIL_PORT: 5822
      EMAIL_HOST_USER: admin
      EMAIL_HOST_PASSWORD: somepass
      EMAIL_USE_TLS: false
      EMAIL_USE_SSL: false
      RELATIVE_PYTHONPATH: venv/bin/python3.10
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test
        run: |
          echo TESTING
          python manage.py makemigrations
          python manage.py migrate

#          python manage.py test
  deploy:
    needs: [test_deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Send query for deploy
        run: "curl --silent --show-error --fail -X POST -k https://deployapi.derzn.ru -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"data\": \"deploy\"}'"

